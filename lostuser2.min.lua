if debug.upvalueid then goto a end;if require then component=require'component'computer=require'computer'else if not print then print=function()end end end;proxy=function(b)local c=component.list(b)()return c and component.proxy(c)or nil end;do local d={}for e,f in pairs(component.list())do d[#d+1]={f,e}end;table.sort(d,function(g,h)return#g[1]<#h[1]end)for i,f in pairs(d)do local j=f[1]:sub(1,1):upper()_G[j]=component.proxy(f[2])end end;sleep=os and os.sleep or function(k)local l=computer.uptime;local m=l()+(k or 0)repeat computer.pullSignal(m-l())until l()>=m end::a::local function n(k)table.sort(k,function(g,h)return#g<#h end)end;local function o(p,q)local k,r={},'^'..p:gsub('.','%1.*')for e in pairs(q)do if type(e)=='string'and e:match(r)then k[#k+1]=e end end;n(k)return k[1]end;local s;local function t(u)return function(i,...)local v=table.pack(u(...))for e,f in pairs(v)do v[e]=s(f)end;return table.unpack(v)end end;s=function(k)local w=type(k)if w~='table'and w~='function'then return k end;local x=getmetatable(k)if x and x.__short then return k end;local y={__short=true,__call=t(k),__mul=t(k),__tostring=function()return'{short}'..tostring(k)end}if w=='function'then return setmetatable({},y)end;y.__index=function(self,z)local A=k[z]local f;if A~=nil then f=A else if z:match'^[A-Z]'then local j=z:sub(1,1)local B=k[j]if B then local C=z:sub(2)f=B[o(C,B)]end end;if f==nil then f=k[o(z,k)]end end;return s(f)end;y.__newindex=k;y.__pairs=function(i)return function(i,e)local e,f=next(k,e)return e,s(f)end,k,nil end;y.__len=function()return#k end;return setmetatable({},y)end;local E;local F=0;local G=0;local function H()G=G+1;return G-1 end;local function I(J,K,L)return E(J:sub(K,L)):gsub('\n','\n'..string.rep('  ',F))end;local M='[_%a][_%a%d]*'local N=M..'[,_%a%d]*'local function O(P)return function(Q)local K,L=Q:match'(){()'if not K then return''end;local R=Q:sub(1,K-1)local S=I(Q,L,-2)if type(P)=='function'then return P(R,S)or''else return P:gsub('HEAD',R):gsub('BODY',S)end end end;local function T(J,U,L)return J:gsub('^'..U..'([^_%a%d])',L..'%1'):gsub('([^_%a%d])'..U..'$','%1'..L):gsub('([^_%a%d])'..U..'([^_%a%d])','%1'..L..'%2')end;local V={}local function W(r,X)V[#V+1]={r,X}end;local function Y(Z,P)W(Z..'(.-%b{})',O(P))end;W('`T',[[~:Tg(){?!v{tr}}]])W('`Z',[[a=`!a ;; ??`!Rm(3){ Rtn(a) c=`!Rm(3) Rtn(a) ??c{Rtn(a)Rm(3)} a=`!a}]])W('`&',' and ')W('`!',' not ')Y('@',W)local function _(a0,S,a1)return[[

local __if = (]]..a0 ..[[)
if __if ]]..(a1 and[[and __if ~= '' and __if ~= 0 ]]or'')..[[then
  ]]..S..[[

end
]]end;Y('?%?',_('HEAD','BODY',true))Y('?%.',[[
if type(HEAD)=='table' then
    HEAD.BODY
end
]])Y('?!',[[
local __p = HEAD
if type(__p)=='table' and (type(__p.BODY)=='table' or type(__p.BODY)=='function') then
  HEAD.BODY()
end
]])Y('~#',function(R,S)local a2='i'..H()S=T(S,'i',a2)R=T(R,'i',a2)local a3=R~=nil and not R:match"^%s*$"return'for '..a2 ..'=1, R.inventorySize(), 1 do\n'..(a3 and _(R,S,true)or S)..'\nend 'end)Y('~:',function(R,S)local a4=H()S=T(S,'k','k'..a4)S=T(S,'v','v'..a4)return'for k'..a4 ..', v'..a4 ..' in pairs('..R..') do\n'..S..'\nend 'end)Y('~~',function(R,S)local a2='i'..H()S=T(S,'i',a2)return'for '..a2 ..'='..R..', 1 do\n'..S..'\nend 'end)local a5=true;function on_first_run(P)if a5 then P()a5=false end end;W('(.+);;(.*)',function(a6,C)return'on_first_run(function()\n  '..a6 ..'\n  \nend)\n'..C end)E=function(a7)F=F+1;local v=a7;local a2=1;while a2<=#V do v=v:gsub(V[a2][1],V[a2][2])a2=a2+1 end;F=F-1;return v end;local a8=s(_ENV)local function a9(aa)local ab=E(aa)if ab==nil or ab:match'^%s*$'then return end;ab=ab:gsub('^%s*',''):gsub('%s*$',''):gsub('[%s\n]*\n','\n')print('\n'..ab)local ac,ad=load(ab,nil,nil,a8)if ad then print(ad)else while not ac()do if debug.upvalueid then os.exit(0)end end end end;if debug.upvalueid then os.exit(0)end;local ae=proxy'drone'.name()D.setStatusText(tostring(ae))for af in ae:sub(1,5):gmatch"%S"do computer.beep(200+af:byte()*10,0.05)end;a9(ae)